c
user
Friend.accepted.where(receiver_id: user.id)
c
n
user.posts
@users
c
current_user.id
 @users = Friend.accepted.my_friends(current_user)
c
@user
current_user
@users.ids
@users = Friend.accepted.my_friends(current_user)
c
n
Friend.accepted.my_friends(current_user)
c
user
n
@users
@users.ids
@users.id
@users.ids
@users
c
user
 user.posts
c
n
c
n
c
Friend.accepted.my_friends(current_user)
c
n
c
n
Friend.accepted.my_friends(current_user)
c
Friend.accepted.my_friends(current_user)
c
post.uniq
n
Friend.accepted.where(receiver_id: user.id)
user.friends.accepted
c
user
 Friend.accepted.where(receiver_id: user.id)
user.friends.accepted
c
current_user.friends.accepted
c
n
post
n
Friend.accepted.where(receiver_id: user.id)
c
user.friends.accepted
current_user.friends.accepted
user.id
 Friend.accepted
c
user
Friend.accepted.where(receiver_id: user.id)
c
Friend.accepted.where(receiver_id: user.id)
c
Friend.accepted.my_friends(current_user)
c
self
user
n
c
n
Friend.accepted.my_friends(current_user)
c
n
post.image.map
post.image
post.image.each do |image| end
c
current_user.posts
current_user.post
current_user
c
n
post.image
post
n
@posts = Post.all
c
n
c
 Post.all
@posts = Post.all
n@posts = Post.all
c
n
post.image
post
c
n
@posts = Post.all
n@posts = Post.all
c
current_user.posts.first.image
current_user.posts.first
current_user.posts
c
params
c
n
n\
current_user.posts.new
current_user.posts
c
n
params
n
params
c
params[:friend]
params
c
n
Friend.find(params[:friend]).update(status: 2)
params
n
params
c
params
Friend.find(params[:friend])
params[:friend]
c
n
Friend.find(params[:friend])
params[:friend]
params
c
params
params[:friend]
c
current_user.friends.accepted.first.user
current_user.friends.accepted.first
current_user.friends.accepted
Friend.where(receiver_id: current_user.id, status: 1)current_user.friends.accepted
Friend.where(receiver_id: current_user.id, status: 1)
c
friend.user.full_name
friend
c
n
@friends.ids
@friends.count
@friends
c
Friend.where(receiver_id: current_user.id, status: 1).or(current_user.friends.accepted).count
Friend.where(receiver_id: current_user.id, status: 1).or(current_user.friends.accepted)
current_user.friends.accepted.count
current_user.friends.accepted
Friend.where(receiver_id: current_user.id, status: 1).count
c
current_user.friends
current_user.friends.include?(user)
current_user
ccurrent_user.friends.include?(user) 
c
current_user.friends.pending.map(&:sender_id).include?(user)
current_user.friends.pending.map(&:receiver_id).include?(user)
current_user.friends
user
c
current_user.friends.pending.map(&:receiver_id)
current_user.friends.pending
c
n
current_user.friends.pending.map(&:friend).include?(user)
current_user.friends.include?(user)
if current_user.friends.include?(user) 
c
current_user
user
c
Friend.where(receiver_id: current_user.id, status: 1).or(current_user.friends.accepted).count
Friend.where(receiver_id: current_user.id, status: 1).or(current_user.friends.accepted)
   36:     #.or(current_user.friends.accepted).count
Friend.where(receiver_id: current_user.id, status: 1)
current_user.friends.accepted.count
Friend.where(receiver_id: current_user.id, status: 1).count
c
current_user.friends.accepted.count
current_user.friends.accepted.count\
current_user.friends.accepted
Friend.where(receiver_id: current_user.id, status: 1).count
c
user_ids
c
self
Friend.accepted.where(receiver_id: self.id)
self
Friend.accepted.where(receiver_id: self.id).first
Friend.accepted.where(receiver_id: self.id)
c
user_ids
user_ids.ids
user_ids
n
Friend.accepted.where(receiver_id: self.id)
user_ids
c
Friend.accepted
@friends
@current_user_friends.ids
n
@friends.ids
@friends
c
user.friends.ids
user.friends
user.friend
user
c
n
current_user.check_user.ids
c
current_user.check_user.ids
current_user.check_user.count
current_user.check_user
c
user
n
c
n
friend.receiver_id
user
n
c
user.ids
n
User.all.where.not(id: friend.receiver_id).ids
User.all.where.not(id: friend.receiver_id)
n
User.all.where.not(id: friend.receiver_id).ids
User.all.where.not(id: friend.receiver_id)
friend
n
User.all.where.not(id: friend.receiver_id).ids
User.all.where.not(id: friend.receiver_id).count
User.all.where.not(id: friend.receiver_id)
n
friends.accepted.ids
friends.accepted.count
n
current_user
